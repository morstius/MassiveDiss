#version 410 core

// input data per vertex, position, uv and normal
layout(location = 0) in vec3 vertexPos;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;

// uniform values, capital
uniform mat4 MVP;
uniform mat4 View;

uniform vec3 LightPos;

// output values
out vec2 uv;
out vec3 pos;
out vec3 normal;
out vec3 eyeDir;
out vec3 lightDir;

void main()
{
	// output position, from vertexPos and using the MVP matrix
    gl_Position = MVP * vec4(vertexPos, 1.0f);


    ///////////////////////////////////////////////
    ///////////////// LIGHTING ////////////////////
    ///////////////////////////////////////////////
    
	// position of the vertex
	pos = (vec4(vertexPos,1)).xyz;
	
	// vector from vertex to camera
	eyeDir = vec3(0,0,0) - ( View * vec4(vertexPos,1)).xyz;

	// vector from vertex to light
	lightDir = ( View * vec4(LightPos,1)).xyz + eyeDir;
	
	// vertex normal
	normal = ( View * vec4(vertexNormal,0)).xyz;

	///////////////////////////////////////////////
    /////////////// PASS-THROUGH //////////////////
    ///////////////////////////////////////////////

	// uv coordinates go straight through
	uv = vertexUV;
}

